import{_ as t,c as s,o as a,ag as e}from"./chunks/framework.CA5djfbr.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/Linux/note.md","filePath":"tutorial/Linux/note.md","lastUpdated":1761009797000}'),d={name:"tutorial/Linux/note.md"};function l(h,i,n,o,r,p){return a(),s("div",null,[...i[0]||(i[0]=[e(`<h2 id="基本配置" tabindex="-1">基本配置 <a class="header-anchor" href="#基本配置" aria-label="Permalink to &quot;基本配置&quot;">​</a></h2><h3 id="cmd-登录-ssh" tabindex="-1">CMD 登录 ssh <a class="header-anchor" href="#cmd-登录-ssh" aria-label="Permalink to &quot;CMD 登录 ssh&quot;">​</a></h3><ul><li>默认 22 端口: <code>ssh root@45.77.123.77</code></li><li>指定 2222 端口: <code>ssh -p 2222 root@45.77.123.77</code></li></ul><h3 id="bashrc-配置文件" tabindex="-1"><code>~/.bashrc</code> 配置文件 <a class="header-anchor" href="#bashrc-配置文件" aria-label="Permalink to &quot;\`~/.bashrc\` 配置文件&quot;">​</a></h3><p><code>~/.bashrc</code> 配置只影响用户自己，修改 <code>/etc/profile</code> 可以作用全局用户</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提示符信息和颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PS1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[\\[\\033[01;35m\\]\\t\\[\\033[00m\\] \\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\] \\[\\033[01;34m\\]\\w\\[\\033[00m\\]] \\$ &#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改历史记录的条数和大小，以及添加历史的详细信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTSIZE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTFILESIZE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTCONTROL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ignoredups:erasedups</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTIGNORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ls:cd:pwd:exit&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTTIMEFORMAT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%F %T \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">whoami</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\` &quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 给ls命令下的文件名着色</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LS_OPTIONS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--color=auto&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dircolors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls $LS_OPTIONS&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls $LS_OPTIONS -alhA&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls $LS_OPTIONS -aA&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 快捷安装包别名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sudo apt install&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># cl函数直接切换目录并列出目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aA</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aA</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="命令格式" tabindex="-1">命令格式 <a class="header-anchor" href="#命令格式" aria-label="Permalink to &quot;命令格式&quot;">​</a></h2><p><code>COMMAND [OPTIONS...选项] [ARGUMENTS...参数]</code></p><ul><li>unix 风格: 横线带字母 <code>ls -a /root</code> <code>free -h</code></li><li>GUN 风格: 横线带全拼 <code>ls --all /root</code> <code>free --human</code></li><li>伯克利风格: 带字母 <code>ps a</code> <code>ps aux</code></li></ul><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><h3 id="硬件信息" tabindex="-1">硬件信息 <a class="header-anchor" href="#硬件信息" aria-label="Permalink to &quot;硬件信息&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>top</code></td><td>查看 CPU 占用</td></tr><tr><td><code>lscpu</code></td><td>查看 CPU 架构信息</td></tr><tr><td><code>free -h</code></td><td>查看内存占用</td></tr><tr><td><code>lsblk</code></td><td>查看硬盘信息</td></tr><tr><td><code>df -h</code></td><td>查看磁盘占用</td></tr></tbody></table><blockquote><p><code>-h </code>: (human) 参数会以人类易读的格式显示（比如 GB 或 MB）</p></blockquote><h3 id="系统信息" tabindex="-1">系统信息 <a class="header-anchor" href="#系统信息" aria-label="Permalink to &quot;系统信息&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>uname -a</code></td><td>打印所有系统的信息</td></tr><tr><td></td><td></td></tr></tbody></table><ul><li><p><code>uname -a</code>: 打印所有系统的信息</p></li><li><p>Linux 内核版本: <code>uname -r</code></p></li><li><p>发行系统版本: <code>cat /etc/os-release</code></p></li><li><p>查看本机名: <code>hostname</code></p></li><li><p>临时设置主机名(改的内存): <code>hostname NAME</code></p></li><li><p>永久设置主机名: <code>nano /etc/hostname</code> 或 <code>hostnamectl set-hostname NAME</code>, 修改文件需要重启才能生效,推荐用后者</p></li><li><p>显示系统运行时间和负载: <code>uptime</code></p></li><li><p>查看本机 ip(内网): <code>hostname -I</code></p></li><li><p>查看公网 ip:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://ifconfig.me\`</span></span></code></pre></div></li></ul><h3 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h3><ul><li><p>显示所有登陆用户: <code>who</code> 或 <code>w</code></p></li><li><p>查找命令路径: <code>which</code></p></li><li><p>查找命令帮助文件的路径: <code>whereis</code></p></li><li><p>切换用户: <code>sudo -i</code>, sudo 用于提权</p></li><li><p>显示当前用户名: <code>whoami</code></p></li><li><p>登录前提示: <code>nano /etc/issue</code></p></li><li><p>登录后提示: <code>nano /etc/motd</code></p></li><li><p>查看当前的运行级别: <code>runlevel</code></p></li><li><p>重启: <code>reboot</code></p></li><li><p>注销: <code>logout</code> 或 <code>exit</code>或<code>^+d</code></p></li><li><p>关机或重启: <code>shutdown</code>, 计划性关机，允许延迟，通知用户 <a href="https://www.runoob.com/linux/linux-comm-shutdown.html" target="_blank" rel="noreferrer">参考</a></p></li><li><p>立即关闭电源: <code>poweroff</code></p></li><li><p>自定义提示符: <code>nano ~/.bashrc</code> <code>PS1=&#39;\\[\\033[01;35m\\]\\t\\[\\033[00m\\] \\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\] \\[\\033[01;34m\\]\\w\\[\\033[00m\\] \\$ &#39;</code></p><blockquote><p><strong>[\\033[01;31m]</strong>:</p><ul><li><code>\\033</code> 是转义字符，表示开始颜色设置。</li><li><code>[01;31m</code> 设置了颜色样式： <ul><li><code>01</code>：加粗</li><li><code>35</code>：紫色（35 是 ANSI 颜色代码中的紫色）</li></ul></li><li>所以，这段代码会将后面显示的内容变为红色并加粗。</li></ul><p><strong>\\t</strong>: 这是一个格式化指令，表示“当前时间”（24 小时制），显示时间格式为 <code>hh:mm:ss</code>。</p><p><strong>[\\033[00m]</strong>: 这个部分用于重置颜色或样式，恢复到默认样式。</p><p><strong>[\\033[01;32m]</strong>: [01;32m\` 设置绿色（32 是绿色的 ANSI 代码），并加粗。</p><p><strong>\\u</strong>: 这是一个格式化指令，表示当前的用户名。</p><p><strong>@</strong>: 这是简单的字符，表示用户名和主机名之间的分隔符。</p><p><strong>\\h</strong>: 这是一个格式化指令，表示主机名的短版本（例如，如果主机名是 <code>myserver.local</code>，它将显示为 <code>myserver</code>）。</p><p><strong>[\\033[00m]</strong>: 再次重置颜色。</p><p><strong>[\\033[01;34m]</strong>: [01;34m\` 设置蓝色并加粗。</p><p><strong>\\w</strong>: 这是一个格式化指令，表示当前工作目录的路径。</p><p><strong>[\\033[00m]</strong>: 这一部分再次重置颜色，确保后面的字符不受前面样式的影响。</p><p><strong>$</strong>:这是一个格式化指令，表示：如果是普通用户，则显示 <code>$</code>。如果是超级用户（root），则显示 <code>#</code>。</p></blockquote></li><li><p>判断是否是 bash 内部命令: <code>type</code></p><ul><li>内部命令不显示路径,优先级: 别名 alias&gt;内部命令&gt;外部命令</li></ul></li><li><p>显示当前文件路径: <code>pwd</code></p></li><li><p>当前 shell 执行脚本: <code>source</code> 或 <code>.</code></p></li><li><p>别名: <code>alias</code>, 取消别名: <code>unalias</code></p></li><li><p>命令路径缓存: <code>hash</code>, 会显示使用次数</p></li><li><p>查看外部命令路径: <code>which</code>, <code>whereis</code></p></li><li><p>延迟: <code>sleep</code></p></li><li><p>清屏: <code>clear</code> 或者 <code>^L</code>快捷键</p></li><li><p>查看程序手册: <code>man</code> 或 <code>info</code>(比 man 更详细)</p></li><li><p>程序描述: \`\`whatis\`</p></li><li><p><code>stat</code>: 显示文件的状态</p></li><li><p><code>hexdump</code>: 以十六进制，十进制，八进制，或 asphalt 显示文本内容</p></li></ul><h2 id="常识" tabindex="-1">常识 <a class="header-anchor" href="#常识" aria-label="Permalink to &quot;常识&quot;">​</a></h2><ul><li>提示符中的<code>$</code>指的是普通用户,<code>#</code>指的是超级用户</li><li>多个命令之间使用<code>;</code>隔开</li><li><code>\\</code>可以给命令换行,同时也是转义符</li><li>命令前面加<code>\\</code>表示强制使用原始命令,不使用别名</li><li><code>~</code>: 指当前用户文件夹</li><li><code>.</code>开头文件是隐藏文件</li></ul><h2 id="init-命令" tabindex="-1">init 命令 <a class="header-anchor" href="#init-命令" aria-label="Permalink to &quot;init 命令&quot;">​</a></h2><p><strong>临时修改,使用<code>runlevel</code>查看</strong></p><ul><li>0 | 关机 | 系统关机状态</li><li>1 | 单用户模式 | 系统维护/root 权限</li><li>2 | 多用户模式(无 NFS) | 基本多用户模式</li><li>3 | 完整多用户模式 | 标准命令行界面</li><li>4 | 保留 | 用户自定义</li><li>5 | 图形界面模式 | 带 GUI 的多用户模式</li><li>6 | 重启 | 系统重启</li></ul><h2 id="bash-shell" tabindex="-1">bash shell <a class="header-anchor" href="#bash-shell" aria-label="Permalink to &quot;bash shell&quot;">​</a></h2><p>显示当前使用的 shell: <code>echo \${SHELL}</code> 显示当前系统使用的所有 shell: <code>cat /etc/shells</code></p><h2 id="时间" tabindex="-1">时间 <a class="header-anchor" href="#时间" aria-label="Permalink to &quot;时间&quot;">​</a></h2><ul><li>显示时间: <code>date</code></li><li>显示日历: <code>cal</code>, 有些系统不支持</li><li>显示时区列表: <code>timedatectl list-timezones</code></li><li>设置时区(上海): <code>timedatectl set-timezone Asia/Shanghai</code></li></ul><h2 id="会话管理" tabindex="-1">会话管理 <a class="header-anchor" href="#会话管理" aria-label="Permalink to &quot;会话管理&quot;">​</a></h2><ul><li>screen 使用较少,了解即可</li><li>Tmux 是一个终端复用器(terminal multiplexer) <a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html" target="_blank" rel="noreferrer">阮一峰-Tmux 使用教程</a></li></ul><p><strong>会话（Session）管理</strong></p><table tabindex="0"><thead><tr><th>操作</th><th>命令/快捷键</th></tr></thead><tbody><tr><td>新建会话</td><td>tmux new -s &lt;会话名&gt;</td></tr><tr><td>断开当前会话,依旧后台运行</td><td>Ctrl+B → d</td></tr><tr><td>重新连接会话</td><td>tmux attach -t &lt;会话名&gt;</td></tr><tr><td>列出所有会话</td><td>tmux ls</td></tr><tr><td>重命名当前会话</td><td>Ctrl+B → $</td></tr><tr><td>切换会话</td><td>Ctrl+B → ( 或 )</td></tr><tr><td>关闭会话</td><td>tmux kill-session -t &lt;会话名&gt;</td></tr></tbody></table><p><strong>窗口（Window）管理</strong></p><table tabindex="0"><thead><tr><th>操作</th><th>快捷键</th></tr></thead><tbody><tr><td>新建窗口</td><td>Ctrl+B → c</td></tr><tr><td>关闭当前窗口</td><td>Ctrl+B → &amp; Ctrl+D</td></tr><tr><td>重命名当前窗口</td><td>Ctrl+B → ,</td></tr><tr><td>切换窗口</td><td>Ctrl+B → 0-9（数字键）</td></tr><tr><td>下一个窗口</td><td>Ctrl+B → n</td></tr><tr><td>上一个窗口</td><td>Ctrl+B → p</td></tr><tr><td>窗口列表</td><td>Ctrl+B → w（可视化选择）</td></tr></tbody></table><p><strong>窗格（Pane）操作</strong></p><table tabindex="0"><thead><tr><th>操作</th><th>快捷键</th><th></th></tr></thead><tbody><tr><td>水平分割窗格</td><td>Ctrl+B → &quot;</td><td></td></tr><tr><td>垂直分割窗格</td><td>Ctrl+B → %</td><td></td></tr><tr><td>切换窗格</td><td>Ctrl+B → 方向键</td><td></td></tr><tr><td>关闭当前窗格</td><td>Ctrl+B → x</td><td></td></tr><tr><td>全屏切换当前窗格</td><td>Ctrl+B → z</td><td></td></tr><tr><td>调整窗格大小</td><td>Ctrl+B → Alt+方向键</td><td></td></tr><tr><td>同步输入所有窗格</td><td>Ctrl+B → :setw synchronize-panes</td><td></td></tr></tbody></table><p><strong>复制模式与滚动</strong></p><table tabindex="0"><thead><tr><th>操作</th><th>快捷键</th></tr></thead><tbody><tr><td>进入复制模式</td><td>Ctrl+B → [</td></tr><tr><td>退出复制模式</td><td>Esc 或 Enter</td></tr><tr><td>搜索文本</td><td>Ctrl+B → [ → ?（反向搜索）或 /（正向搜索）</td></tr><tr><td>快速翻页</td><td>Ctrl+B → [ → PgUp/PgDn</td></tr></tbody></table><p><strong>其他实用操作</strong></p><table tabindex="0"><thead><tr><th>操作</th><th>命令/快捷键</th></tr></thead><tbody><tr><td>重新加载配置</td><td>Ctrl+B → :source-file ~/.tmux.conf</td></tr><tr><td>显示时间</td><td>Ctrl+B → t</td></tr><tr><td>列出所有快捷键</td><td>Ctrl+B → ?</td></tr><tr><td>启用鼠标支持</td><td>在 ~/.tmux.conf 中添加 set -g mouse on</td></tr></tbody></table><h2 id="输出信息-echo" tabindex="-1">输出信息 echo <a class="header-anchor" href="#输出信息-echo" aria-label="Permalink to &quot;输出信息 echo&quot;">​</a></h2><p><a href="https://www.runoob.com/linux/linux-comm-echo.html" target="_blank" rel="noreferrer">参考链接</a></p><p>echo 命令是 Linux 中最基本和常用的命令之一，用于在终端中显示文本或变量的值。 echo 是 Linux/Unix 系统中的内置命令，主要用于：</p><ul><li>在终端显示文本信息</li><li>输出变量的值</li><li>生成格式化的字符串</li><li>向文件追加内容</li></ul><p><strong>基本语法</strong>: <code>echo [选项][字符串]</code></p><p><strong>常用选项</strong>:</p><ul><li>-n 不输出换行符</li><li>-e 启用转义字符解释</li><li>-E 禁用转义字符解释（默认）</li></ul><p><strong>转义字符（需要 -e 选项）</strong>:</p><ul><li>\\n - 换行</li><li>\\t - 制表符</li><li>\\r - 回车</li><li>\\b - 退格</li><li>\\ - 反斜杠</li><li>&quot; - 双引号</li><li>\\a - 响铃</li></ul><p><strong>引号问题</strong>：</p><ul><li>双引号：弱引用,会解释变量和特殊字符</li><li>单引号：强引用,原样输出所有内容,屏蔽特殊含义</li><li>无引号：多个空格会被压缩为一个</li></ul><h2 id="编码和字符集" tabindex="-1">编码和字符集 <a class="header-anchor" href="#编码和字符集" aria-label="Permalink to &quot;编码和字符集&quot;">​</a></h2><ul><li>查看语言和编码: <code>echo $LANG</code></li><li>切换中文语言: <code>LANG=zh_CN.UTF-8</code>(有些改了也不显示中文提示)</li><li>切换英文语言: <code>LANG=en_US.UTF-8</code></li></ul><h2 id="反引号-和-大括号" tabindex="-1">反引号\`\`和$(), 大括号 <a class="header-anchor" href="#反引号-和-大括号" aria-label="Permalink to &quot;反引号\`\`和$(), 大括号{ }&quot;">​</a></h2><p>反引号: 命令转换,等于$(),变量和命令都执行,并且将反引号的内容当成命令执行后,交给调用反引号的命令继续执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">11:43:29</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@aliyun001</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # echo &quot;My hostname is \`hostname\`&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">My</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aliyun001</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%F\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 生成主机名+年月日的txt空文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%F\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.txt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 使用</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$()</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">嵌套使用命令,反引号可直接替换为</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$()</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,如下:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.txt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>大括号:可快速批量生成特定字符串</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">12:18:56</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@aliyun001</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # echo file{1,2,3}.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file1.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file2.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file3.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 批量输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">12:20:51</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@aliyun001</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # echo {1..5}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 使用..省略中间连续的数字,字母也可以</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">12:23:31</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@aliyun001</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # echo {20..10..2}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 20开始到10,步长2</span></span></code></pre></div><h2 id="table-键" tabindex="-1">Table 键 <a class="header-anchor" href="#table-键" aria-label="Permalink to &quot;Table 键&quot;">​</a></h2><ul><li>按单击: 如果唯一,直接补全命令/路径</li><li>双击: 给出所有符合条件的命令/路径列表</li></ul><h2 id="命令行历史" tabindex="-1">命令行历史 <a class="header-anchor" href="#命令行历史" aria-label="Permalink to &quot;命令行历史&quot;">​</a></h2><p><code>history</code> 是 Linux 系统中一个极其有用的内置命令，它记录了用户在终端中执行过的所有命令历史</p><p>当你在终端输入命令时，Bash 会将这些命令保存在内存中，并在正常退出时写入到 <code>~/.bash_history</code> 文件中（默认配置下）。</p><p><strong>常用选项参数详解</strong></p><table tabindex="0"><thead><tr><th>选项</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>-c</code></td><td>clear 清除所有历史记录</td><td><code>history -c</code></td></tr><tr><td><code>-d</code></td><td>delete 删除指定位置的历史记录</td><td><code>history -d 1005</code></td></tr><tr><td><code>-a</code></td><td>append 立即将内存中的历史写入历史文件</td><td><code>history -a</code></td></tr><tr><td><code>-n</code></td><td>从历史文件中读取未读的历史记录</td><td><code>history -n</code></td></tr><tr><td><code>-r</code></td><td>read 读取历史文件内容到当前会话</td><td><code>history -r</code></td></tr><tr><td><code>-w</code></td><td>write 将当前历史记录写入历史文件</td><td><code>history -w</code></td></tr><tr><td><code>-s</code></td><td>将命令添加到历史记录中,不执行命令</td><td><code>history -s</code></td></tr></tbody></table><p><strong>快速执行历史命令</strong></p><table tabindex="0"><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td><code>!n</code></td><td>执行历史记录中第 n 条命令 !2:执行第 2 条命令,!-2:执行倒数第二条</td></tr><tr><td><code>!!</code></td><td>执行上一条命令</td></tr><tr><td><code>!string</code></td><td>执行最近一条以 string 开头的命令</td></tr><tr><td><code>!?at</code></td><td>最近包含 at 的命令</td></tr><tr><td><code>!*</code></td><td>将前一条命令的所有参数作为这个命令的参数 cat !*</td></tr><tr><td><code>!:n</code></td><td>将前一条命令的第 n 个参数作为这个命令的参数 cat !:2</td></tr><tr><td><code>alt+.</code></td><td>快捷键,将前一条命令的最后一个参数作为这个命令的参数</td></tr></tbody></table><p><strong>环境变量配置</strong></p><p>通过环境变量可以自定义 history 命令的行为：</p><table tabindex="0"><thead><tr><th>变量</th><th>说明</th><th>推荐值</th></tr></thead><tbody><tr><td><code>HISTSIZE</code></td><td>内存中保存的历史命令数量</td><td><code>5000</code></td></tr><tr><td><code>HISTFILESIZE</code></td><td>历史文件中保存的命令数量</td><td><code>10000</code></td></tr><tr><td><code>HISTCONTROL</code></td><td>控制历史记录方式</td><td><code>ignoredups:erasedups</code></td></tr><tr><td><code>HISTIGNORE</code></td><td>指定不记录的命令</td><td><code>&quot;ls:cd:pwd:exit&quot;</code></td></tr></tbody></table><p>配置示例（添加到 <code>~/.bashrc</code>文件(用户级配置)或<code>/etc/profile</code>文件(系统级配置)才能永久保存）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTSIZE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTFILESIZE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTCONTROL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ignoredups:erasedups</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTIGNORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ls:cd:pwd:exit&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HISTTIMEFORMAT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%F %T \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">whoami</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\` &quot;</span></span></code></pre></div><blockquote><p><strong>加 export</strong>：设置一个环境变量，影响当前 shell 及其子进程。 <strong>不加 export</strong>：仅在当前 shell 会话有效，不影响子进程。</p></blockquote><h2 id="bash-快捷键" tabindex="-1">bash 快捷键 <a class="header-anchor" href="#bash-快捷键" aria-label="Permalink to &quot;bash 快捷键&quot;">​</a></h2><table tabindex="0"><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td><code>^+l</code>(^指 ctrl)</td><td>清屏,等于 clear</td></tr><tr><td><code>^+o</code></td><td>执行当前命令,并重新显示当前命令</td></tr><tr><td><code>^+s</code></td><td>阻止屏幕输出,锁定,使用 <code>^+q</code> 解锁</td></tr><tr><td><code>^+c</code></td><td>终止命令</td></tr><tr><td><code>^+z</code></td><td>挂起命令</td></tr><tr><td><code>alt+.</code></td><td>将前一条命令的最后一个参数作为这个命令的参数</td></tr><tr><td><code>alt+r</code></td><td>删除整行</td></tr><tr><td><code>^+u</code></td><td>删除光标之前的所有字符串</td></tr><tr><td><code>^+k</code></td><td>删除光标之后的所有字符串</td></tr><tr><td><code>^+d</code></td><td>退出命令行</td></tr></tbody></table><h2 id="获得帮助" tabindex="-1">获得帮助 <a class="header-anchor" href="#获得帮助" aria-label="Permalink to &quot;获得帮助&quot;">​</a></h2><p>| 命令 | 说明 | | ----------------- | ------------------------------------------------------------------------------- | --- | | <code>help</code> | 获取内部命令的帮助信息, <code>help echo</code> , <code>help history</code>,<code>man bash</code>查看全部内部命令 | | <code>whatis</code> | 显示命令的简短说明, 等于<code>man -f</code> | | <code>--help</code>或<code>-h</code> | 获取外部命令的帮助信息,<code>date --help</code>,有些不支持 <code>-h</code> | | <code>man</code> | 用于查看各种命令、函数和配置文件的手册页面,手册存放在 <code>/usr/share/man</code> | | <code>info</code> | 比<code>man</code>更详细，包含教程和示例 | | <code>/usr/share/doc/</code> | | |</p><p><code>man</code>命令有不同的章节,常见的节号包括：(<a href="https://www.runoob.com/linux/linux-comm-man.html" target="_blank" rel="noreferrer">参考</a>)</p><ul><li>1：用户命令</li><li>2：系统调用</li><li>3：C 库函数</li><li>4：设备和特殊文件</li><li>5：文件格式和约定</li><li>6：游戏和演示</li><li>7：杂项</li><li>8：系统管理命令</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">16:13:47</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@aliyun001</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # whereis ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/man/man1/ls.1.gz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 这里显示ls命令的程序和说明所在路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">16:48:10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@aliyun001</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # whatis ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (1)               - list directory contents // 这里显示ls的手册章节是在1章节,就是指ls.1.gz文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">16:48:19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@aliyun001</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # man 1 ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 这里查看ls手册的1章节,实际就是打开了ls.1.gz文件,命令不加数字默认最后一个章节</span></span></code></pre></div><p>一些常见的选项包括：</p><ul><li><code>-f</code>：显示与指定关键字相关的手册页面。</li><li><code>-k</code>：搜索手册页中与关键字匹配的条目。</li><li><code>-a</code>：显示所有匹配的手册页面。</li><li><code>-w</code>：仅显示手册页的位置，而不显示其内容。</li></ul><h2 id="文件管理" tabindex="-1">文件管理 <a class="header-anchor" href="#文件管理" aria-label="Permalink to &quot;文件管理&quot;">​</a></h2><h3 id="基础知识" tabindex="-1"><strong>基础知识</strong> <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;**基础知识**&quot;">​</a></h3><ul><li><p>绝对路径:以/开头,从根目录开始,完整的文件路径</p></li><li><p>相对路径: 任何不以/和~开头的路径,相对于当前工作目录的位置或特殊场景下某个目录的位置</p></li><li><p>目录名: <code>dirname</code>, 文件的路径,不包含自己的文件名, /etc/a/b 中/etc/a 为 dirname</p></li><li><p>基名: <code>basename</code>, 文件自己的名字,/etc/a/b 中 b 为 basename,目录也是文件</p></li><li><p>文件列表中的<code>.</code>指当前目录, <code>..</code>指父目录(上级目录)</p></li><li><p>文件的三个时间,使用<code>ls --time=mtime filename</code>或<code>stat filename</code>命令读取:</p><ul><li><code>mtime</code>: modify time 内容的修改时间</li><li><code>ctime</code>: change time 文件属性的修改时间(大小,时间,权限)</li><li><code>atime</code>: access time 被读取的时间</li></ul></li><li><p>Linux 中文件后缀没有 windows 严格</p></li><li><p>Linux 中只有换行\\n 没有回车\\r</p></li><li><p>常用通配符(常用于匹配文件,只知道一部分信息剩下用通配符表示: abc*, a??, a[a-c])</p><ul><li><code>*</code>: 匹配零个或多个字符, <code>rm -rf *</code> <code> ls -a bash*</code>, 无法删除或匹配隐藏的文件</li><li><code>?</code>: 匹配任何单个字符</li><li><code>~</code>: 当前用户家目录</li><li><code>~mage</code>: 用户 mage 的家目录</li><li><code>~+</code>和<code>.</code>: 当前工作目录</li><li><code>~-</code>: 前一个工作目录</li><li><code>[0-9]</code>: 匹配数字范围</li><li><code>[a-z]</code>: 匹配字母范围</li><li><code>[wang]</code>: 匹配列表中的任何的一个字符</li><li><code>[^wang]</code>: 匹配列表中的所有字符以外的字符</li></ul></li><li><p><code>/</code>根目录,也是文件名分隔符, <code>~</code>当前用户目录简写</p></li><li><p>以<code>.</code>开头的是隐藏文件</p></li><li><p>文件名称大小写敏感</p></li><li><p><code>bin -&gt; usr/bin</code>: 箭头这种形式指的链接文件,相当于快捷方式,可用<code>lh</code>命令创建</p></li><li><p>蓝色--&gt;目录; 绿色--&gt;可执行文件; 红色--&gt;压缩文件; 浅蓝色--&gt;链接文件; 灰色--&gt;其他文件</p></li><li><p>启用颜色库和自动显示颜色的<code>~/.bashrc</code>配置</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LS_OPTIONS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--color=auto&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dircolors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls $LS_OPTIONS&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls $LS_OPTIONS -alh&#39;</span></span></code></pre></div></li></ul><h3 id="文件目录结构-参考" tabindex="-1">文件目录结构 <a href="https://www.runoob.com/linux/linux-system-contents.html" target="_blank" rel="noreferrer">参考</a> <a class="header-anchor" href="#文件目录结构-参考" aria-label="Permalink to &quot;文件目录结构 [参考](https://www.runoob.com/linux/linux-system-contents.html)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td><code>/</code></td><td>文件系统的起始位置,称为根</td></tr><tr><td><code> /bin</code></td><td>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</td></tr><tr><td><code>/boot</code></td><td>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</td></tr><tr><td><code>/dev</code></td><td>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</td></tr><tr><td><code>/etc</code></td><td>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</td></tr><tr><td><code>/home</code></td><td>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</td></tr><tr><td><code>/lib</code></td><td>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</td></tr><tr><td><code>/lost+found</code></td><td>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</td></tr><tr><td><code>/media</code></td><td>linux 系统会自动识别一些设备，例如 U 盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</td></tr><tr><td><code>/mnt</code></td><td>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 /mnt/ 上，然后进入该目录就可以查看光驱里的内容了</td></tr><tr><td><code>/opt</code></td><td>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个 ORACLE 数据库则就可以放到这个目录下。默认是空的</td></tr><tr><td><code>/proc</code></td><td>proc 是 Processes(进程) 的缩写，/proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的 ping 命令，使别人无法 ping 你的机器：<code>echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</code></td></tr><tr><td><code>/root</code></td><td>该目录为系统管理员，也称作超级权限者的用户主目录。</td></tr><tr><td><code>/sbin</code></td><td>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。</td></tr><tr><td><code>/selinux</code></td><td>这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放 selinux 相关的文件的。</td></tr><tr><td><code>/srv</code></td><td>该目录存放一些服务启动之后需要提取的数据。</td></tr><tr><td><code>/sys</code></td><td>这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。 sysfs 文件系统集成了下面 3 种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。该文件系统是内核设备树的一个直观反映。 当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</td></tr><tr><td><code>/tmp</code></td><td>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</td></tr><tr><td><code>/usr</code></td><td>usr 是 unix system resources(unix 系统资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</td></tr><tr><td><code>/usr/bin</code></td><td>系统用户使用的应用程序。</td></tr><tr><td><code>/usr/sbin</code></td><td>超级用户使用的比较高级的管理程序和系统守护程序。</td></tr><tr><td><code>usr/scr</code></td><td>内核源代码默认的放置目录。</td></tr><tr><td><code>/var</code></td><td>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</td></tr><tr><td><code>/run</code></td><td>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。</td></tr></tbody></table><blockquote><p>在 Linux 系统中，有几个目录是比较重要的，平时需要注意不要误删除或者随意更改内部文件。</p><p><code>/etc</code>： 上边也提到了，这个是系统中的配置文件，如果你更改了该目录下的某个文件可能会导致系统不能启动。</p><p><code>/bin</code>, <code>/sbin</code>, <code>/usr/bin</code>, <code>/usr/sbin</code>: 这是系统预设的执行文件的放置目录，比如 <code>ls</code> 就是在 <code>/bin/ls</code> 目录下的。</p><p>值得提出的是 <code>/bin</code>、<code>/usr/bin</code> 是给系统用户使用的指令（除 root 外的通用用户），而<code>/sbin</code>, <code>/usr/sbin</code> 则是给 root 使用的指令。</p><p><code>/var</code>： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在 /var/log 目录下，另外 mail 的预设放置也是在这里。</p></blockquote><h3 id="文件类型-参考" tabindex="-1">文件类型 <a href="https://www.runoob.com/linux/linux-file-attr-permission.html" target="_blank" rel="noreferrer">参考</a> <a class="header-anchor" href="#文件类型-参考" aria-label="Permalink to &quot;文件类型 [参考](https://www.runoob.com/linux/linux-file-attr-permission.html)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drwxr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 4.0K</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Apr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 11:26</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .pip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  161</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Jul</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2019</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .profile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crw-rw----</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tty</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       7,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  70</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Oct</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 23:28</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vcsu6</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brw-rw----</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    254,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Oct</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 23:28</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vda</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lrwxrwxrwx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Apr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 11:19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usr/bin</span></span></code></pre></div><ul><li><code>-</code>: 普通文件；</li><li><code>d</code>: directory, 目录;</li><li><code>l</code>: link, 链接文档(link file)；</li><li><code>b</code>: block, 装置文件里面的可供储存的接口设备(可随机存取装置)；</li><li><code>c</code>: character, 装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置);</li><li><code>p</code>: pipe, 管道文件;</li><li><code>s</code>: socket, 套接字文件;</li></ul><p>接下来的字符中，以三个为一组，且均为 rwx 的三个参数的组合。其中， r 代表可读(read)、 w 代表可写(write)、 x 代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 - 而已。</p><h3 id="文件操作大杂烩" tabindex="-1">文件操作大杂烩 <a class="header-anchor" href="#文件操作大杂烩" aria-label="Permalink to &quot;文件操作大杂烩&quot;">​</a></h3><ul><li><code>pwd</code>:显示当前工作文件夹</li><li><code>$OLDPWD</code>: 用于记录上次工作目录的变量, <code>cd -</code>命令就是访问了这个变量</li><li><code>stat</code>: 查看文件的状态, <code>stat a.txt</code></li><li><code>file</code>: 查看文件的类型, <code>file a.txt</code></li><li><code>touch</code>: 不存在就创建文件,存在就刷新 mtime ctime atime 的时间, <code>touch filename</code></li></ul><h3 id="切换cd" tabindex="-1">切换<code>cd</code> <a class="header-anchor" href="#切换cd" aria-label="Permalink to &quot;切换\`cd\`&quot;">​</a></h3><p><code>cd</code>: 切换到当前用户主目录,等同于<code>cd ~</code>, cd 的作用是改变 shell 的工作目录</p><ul><li><code>cd ..</code>: 切换到父目录</li><li><code>cd -</code>: 切换到上次的工作目录</li></ul><h3 id="复制-cp" tabindex="-1">复制 <code>cp</code> <a class="header-anchor" href="#复制-cp" aria-label="Permalink to &quot;复制 \`cp\`&quot;">​</a></h3><p><code>cp</code>: 实现文件或目录的复制 <a href="https://www.runoob.com/linux/linux-comm-cp.html" target="_blank" rel="noreferrer">参考</a>, 如果目标文件夹不存在就创建,存在就会复制为目标文件夹的子目录</p><p><strong>语法:</strong></p><ul><li><code>cp [options] source dest</code></li><li><code>cp [options] source... directory</code></li><li><code>cp [options] -t directory source</code></li></ul><p><strong>选项</strong>(常用<code>-av</code>选项)</p><ul><li><code>-r</code>或<code>-R</code>: 递归复制目录及其内容（用于复制目录）</li><li><code>-p</code>: 保留文件的原始属性（如权限、所有者、时间戳等）</li><li><code>-d</code>: --no-dereference --preserve=links 不复制原文件,只复制链接名</li><li><code>-a</code>：归档模式，等同于 <code>-dpR</code>，保留所有文件属性和递归复制目录,常用于备份</li><li><code>-v</code>：显示详细的复制过程（verbose）</li><li><code>-b</code>: 目标存在,覆盖前先备份,形式为<code>filename~</code>,只保留最近的一个备份</li></ul><h3 id="移动-重命名mv" tabindex="-1">移动+重命名<code>mv</code> <a class="header-anchor" href="#移动-重命名mv" aria-label="Permalink to &quot;移动+重命名\`mv\`&quot;">​</a></h3><p><strong><code>mv</code>: 移动或重命名文件</strong></p><p>语法:</p><ul><li><code>mv [options] source dest</code></li><li><code>mv [options] source... directory</code></li></ul><p>选项:</p><ul><li><code>-i</code>: 交互, 如果目标存在会询问</li><li><code>-f</code>: 强制, 如果目标存在直接覆盖</li><li><code>-b</code>: 备份, 如果目标存在,先备份后覆盖</li></ul><p><strong><code>reaname</code>: 批量重命名文件 <a href="https://www.runoob.com/linux/linux-comm-rename.html" target="_blank" rel="noreferrer">参考</a></strong></p><p>语法:</p><ul><li><code>rename [选项] &#39;表达式&#39; 文件...</code><ul><li><code>表达式</code>：指定文件名转换规则的正则表达式或替换字符串</li><li><code>文件</code>：要重命名的目标文件，支持通配符（如 <code>*.txt</code>）</li></ul></li></ul><p>示例:</p><ul><li><code>rename &#39;conf&#39; &#39;conf.bak&#39; f*</code>: 将所有 f 开头文件中的 conf 改为 conf.bak</li><li><code>rename &#39;.bak&#39; &#39;&#39; *.bak</code>: 将所有有.bak 后缀的文件删除.bak 后缀</li></ul><h3 id="删除rm" tabindex="-1">删除<code>rm</code> <a class="header-anchor" href="#删除rm" aria-label="Permalink to &quot;删除\`rm\`&quot;">​</a></h3><p><strong><code>rm</code>: 删除一个文件或者目录</strong></p><p>语法: <code>rm [options] name...</code></p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-i</code></td><td>交互, 删除前逐一询问</td></tr><tr><td><code>-f</code></td><td>即使原档案属性设为唯读，亦直接删除，无需逐一确认</td></tr><tr><td><code>-r</code></td><td>递归, 将目录及以下之档案亦逐一删除</td></tr></tbody></table><table tabindex="0"><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>rm -rf /</code></td><td>删根操作, 目前有保护, 需要加<code>--no-preserve-root</code>参数, <code>rm -rf --no-preserve-root /</code></td></tr><tr><td><code>rm -rf /*</code></td><td>可以直接执行,效果和删根一样</td></tr><tr><td><code>rm -rf * .[^.]*</code></td><td>保留当前文件夹, 删除当前文件夹内所有文件,包括隐藏文件, <code>.[^.]*</code>代表点开头的第二个不是点的(排除.和..)所有文件,即隐藏文件</td></tr><tr><td><code>rm -- -f</code></td><td>使用<code>--</code>可以删除<code>-</code>开头的文件,或者使用绝对或相对路径删</td></tr></tbody></table><p><strong><code>shred</code> : 安全删除文件(覆盖后删除)</strong></p><p>语法: <code>shred [选项]... 文件...</code></p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-n N</code></td><td>覆写次数（默认为 3 次）</td></tr><tr><td><code>-z</code></td><td>最后用零覆写以隐藏 shred 操作</td></tr><tr><td><code>-u</code></td><td>覆写后截断并删除文件</td></tr><tr><td><code>-v</code></td><td>显示详细操作过程</td></tr><tr><td><code>-f</code></td><td>必要时强制更改权限以允许写入</td></tr><tr><td><code>-x</code></td><td>不要处理超过文件大小的块</td></tr></tbody></table><ul><li><code>shred -zvnu 5 filename</code>: 对文件进行反复 5 次复写后删除</li></ul><h3 id="目录tree-mkdir-rmdir" tabindex="-1">目录<code>tree mkdir rmdir</code> <a class="header-anchor" href="#目录tree-mkdir-rmdir" aria-label="Permalink to &quot;目录\`tree mkdir rmdir\`&quot;">​</a></h3><p><strong><code>tree</code>以树状图显示目录</strong></p><p>刚开始没有需要自己安装<code>apt install tree</code> <a href="https://www.runoob.com/linux/linux-comm-tree.html" target="_blank" rel="noreferrer"><strong>参考</strong></a></p><p>语法: <code>tree [-aACdDfFgilnNpqstux][-I &lt;范本样式&gt;][-P &lt;范本样式&gt;][目录...]</code></p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-d</code></td><td>只显示目录</td></tr><tr><td><code>-L</code></td><td>level, 指定显示 ide 层级</td></tr><tr><td><code>p</code></td><td>pattern, &lt;范本样式&gt; 只显示符合范本样式的文件或目录名称</td></tr></tbody></table><p><strong><code>mkdir</code>创建目录</strong></p><p>语法: <code>mkdir [-p] dirName</code></p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-p</code></td><td>确保目录名称存在，不存在的就建一个</td></tr><tr><td><code>-v</code></td><td>显示详细信息</td></tr><tr><td><code>-m</code></td><td>MODE, 创建目录时直接指定权限</td></tr></tbody></table><p><strong><code>rmdir</code>删除空的目录</strong></p><p>语法: <code>rmdir [-p] dirName</code></p><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>-p</code></td><td>当子目录被删除后使它也成为空目录的话，则顺便一并删除</td></tr><tr><td><code>-v</code></td><td>显示 i 详细信息</td></tr></tbody></table><h2 id="文件元数据和节点表结构" tabindex="-1">文件元数据和节点表结构 <a class="header-anchor" href="#文件元数据和节点表结构" aria-label="Permalink to &quot;文件元数据和节点表结构&quot;">​</a></h2>`,134)])])}const F=t(d,[["render",l]]);export{k as __pageData,F as default};
